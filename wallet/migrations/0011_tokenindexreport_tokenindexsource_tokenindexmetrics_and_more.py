# Generated by Django 4.2.18 on 2025-02-11 02:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("wallet", "0010_tokenindex"),
    ]

    operations = [
        migrations.CreateModel(
            name="TokenIndexReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_tokens", models.IntegerField(verbose_name="代币总数")),
                ("grade_a_count", models.IntegerField(verbose_name="A级代币数")),
                ("grade_b_count", models.IntegerField(verbose_name="B级代币数")),
                ("grade_c_count", models.IntegerField(verbose_name="C级代币数")),
                ("new_tokens", models.IntegerField(verbose_name="新增代币数")),
                ("removed_tokens", models.IntegerField(verbose_name="移除代币数")),
                (
                    "report_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="报告时间"),
                ),
                ("details", models.JSONField(default=dict, verbose_name="详细信息")),
            ],
            options={
                "verbose_name": "索引库报告",
                "verbose_name_plural": "索引库报告",
                "ordering": ["-report_date"],
            },
        ),
        migrations.CreateModel(
            name="TokenIndexSource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="数据源名称")),
                ("priority", models.IntegerField(verbose_name="优先级")),
                (
                    "last_sync",
                    models.DateTimeField(auto_now=True, verbose_name="最后同步时间"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否启用"),
                ),
            ],
            options={
                "verbose_name": "代币数据源",
                "verbose_name_plural": "代币数据源",
                "ordering": ["priority"],
            },
        ),
        migrations.CreateModel(
            name="TokenIndexMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "daily_volume",
                    models.DecimalField(
                        decimal_places=18,
                        default=0,# type: ignore
                        max_digits=30,
                        verbose_name="24h交易量(USD)",
                    ),# type: ignore
                ),
                (
                    "holder_count",
                    models.IntegerField(default=0, verbose_name="持有人数"),
                ),
                (
                    "liquidity",
                    models.DecimalField(
                        decimal_places=18,
                        default=0,# type: ignore
                        max_digits=30,
                        verbose_name="流动性(USD)",
                    ),# type: ignore
                ),
                (
                    "market_cap",
                    models.DecimalField(
                        decimal_places=18,
                        default=0,# type: ignore
                        max_digits=30,
                        verbose_name="市值(USD)",
                    ),# type: ignore
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=18,
                        default=0,# type: ignore
                        max_digits=30,
                        verbose_name="价格(USD)",
                    ),# type: ignore
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "token",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="wallet.tokenindex",
                        verbose_name="代币",
                    ),
                ),
            ],
            options={
                "verbose_name": "代币指标",
                "verbose_name_plural": "代币指标",
            },
        ),
        migrations.CreateModel(
            name="TokenIndexGrade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "grade",
                    models.CharField(
                        choices=[
                            ("A", "A级 - 核心代币"),
                            ("B", "B级 - 常规代币"),
                            ("C", "C级 - 观察代币"),
                        ],
                        max_length=1,
                        verbose_name="等级",
                    ),
                ),
                ("score", models.IntegerField(default=0, verbose_name="综合评分")),
                (
                    "last_evaluated",
                    models.DateTimeField(auto_now=True, verbose_name="最后评估时间"),
                ),
                (
                    "evaluation_reason",
                    models.TextField(blank=True, null=True, verbose_name="评估原因"),
                ),
                (
                    "token",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grade",
                        to="wallet.tokenindex",
                        verbose_name="代币",
                    ),
                ),
            ],
            options={
                "verbose_name": "代币等级",
                "verbose_name_plural": "代币等级",
            },
        ),
    ]
